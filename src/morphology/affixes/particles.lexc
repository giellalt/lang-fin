LEXICON PCLE_BACK_CLIT

%+Foc/han:%>han  # ;

%+Foc/han%+Foc/kaan:%>han%>kaan  # ;

%+Foc/han%+Foc/ko:%>han%>ko  # ;

%+Foc/han%+Foc/pa:%>han%>pa  # ;

%+Foc/kaan:%>kaan  # ;

%+Foc/kaan%+Foc/han:%>kaan%>han  # ;

%+Foc/kaan%+Foc/kin:%>kaan%>kin  # ;

%+Foc/kaan%+Foc/ko:%>kaan%>ko  # ;

%+Foc/kaan%+Foc/pa:%>kaan%>pa  # ;

%+Foc/kin:%>kin  # ;

%+Foc/kin%+Foc/han:%>kin%>han  # ;

%+Foc/kin%+Foc/kaan:%>kin%>kaan  # ;

%+Foc/kin%+Foc/ko:%>kin%>ko  # ;

%+Foc/kin%+Foc/pa:%>kin%>pa  # ;

%+Foc/ko:%>ko  # ;

%+Foc/ko%+Foc/han:%>ko%>han  # ;

%+Foc/ko%+Foc/kaan:%>ko%>kaan  # ;

%+Foc/ko%+Foc/kin:%>ko%>kin  # ;

%+Foc/ko%+Foc/pa:%>ko%>pa  # ;

%+Foc/ko%+Foc/s:%>ko%>s  # ;

%+Foc/pa:%>pa  # ;

%+Foc/pa%+Foc/han:%>pa%>han  # ;

%+Foc/pa%+Foc/kaan:%>pa%>kaan  # ;

%+Foc/pa%+Foc/kin:%>pa%>kin  # ;

%+Foc/pa%+Foc/ko:%>pa%>ko  # ;

%+Foc/pa%+Foc/s:%>pa%>s  # ;


LEXICON PCLE_BACK_CLIT_KA

%+Foc/ka:%>ka  # ;


LEXICON PCLE_BACK_CLIT_KA_S

%+Foc/ka:%>ka  # ;

%+Foc/ka%+Foc/han:%>ka%>han  # ;

%+Foc/ka%+Foc/pa:%>kapa  # ;

%+Foc/ka%+Foc/pa%+Foc/han:%>ka%>pa%>han  # ;

%+Foc/ka%+Foc/pa%+Foc/s:%>ka%>pa%>s  # ;

%+Foc/ka%+Foc/s:%>ka%>s  # ;

%+Foc/s:%>s  # ;


!!LEXICON PCLE_BACK_CLIT_KO
!!
!!%+Foc/ko:%>ko  # ;
!!
!!%+Foc/ko%+Foc/han:%>ko%>han  # ;
!!
!!%+Foc/ko%+Foc/s:%>ko%>s  # ;


LEXICON PCLE_BACK_CLIT_OPT

:  # ;
:  PCLE_BACK_CLIT ;


LEXICON PCLE_BACK_POSS

%+Px3:%>nsa  PCLE_BACK_CLIT_OPT ;

%+PxPl1:%>mme  PCLE_BACK_CLIT_OPT ;

%+PxPl2:%>nne  PCLE_BACK_CLIT_OPT ;

%+PxSg1:%>ni  PCLE_BACK_CLIT_OPT ;

%+PxSg2:%>si  PCLE_BACK_CLIT_OPT ;


LEXICON PCLE_BACK_POSS_AN

%+Px3:%>an  PCLE_BACK_CLIT_OPT ;


LEXICON PCLE_BACK_POSS_AN_OBL

:  PCLE_BACK_POSS ;
:  PCLE_BACK_POSS_AN ;


LEXICON PCLE_BACK_POSS_AN_OPT

:  PCLE_BACK_POSS ;
:  PCLE_BACK_POSS_AN ;
:  PCLE_BACK_CLIT ;
:  # ;


LEXICON PCLE_BACK_POSS_EN

%+Px3:%>en  PCLE_BACK_CLIT_OPT ;


LEXICON PCLE_BACK_POSS_EN_OBL

:  PCLE_BACK_POSS ;
:  PCLE_BACK_POSS_EN ;


LEXICON PCLE_BACK_POSS_EN_OPT

:  PCLE_BACK_POSS ;
:  PCLE_BACK_POSS_EN ;
:  PCLE_BACK_CLIT ;
:  # ;


LEXICON PCLE_COMPOUND_INTERJ

#:-  INTERJECTION ;

#:  INTERJECTION ;


LEXICON PCLE_FRONT_CLIT

%+Foc/han:%>hän  # ;

%+Foc/han%+Foc/kaan:%>hän%>kään  # ;

%+Foc/han%+Foc/ko:%>hän%>kö  # ;

%+Foc/han%+Foc/pa:%>hän%>pä  # ;

%+Foc/kaan:%>kään  # ;

%+Foc/kaan%+Foc/han:%>kään%>hän  # ;

%+Foc/kaan%+Foc/kin:%>kään%>kin  # ;

%+Foc/kaan%+Foc/ko:%>kään%>kö  # ;

%+Foc/kaan%+Foc/pa:%>kään%>pä  # ;

%+Foc/kin:%>kin  # ;

%+Foc/kin%+Foc/han:%>kin%>hän  # ;

%+Foc/kin%+Foc/kaan:%>kin%>kään  # ;

%+Foc/kin%+Foc/ko:%>kin%>kö  # ;

%+Foc/kin%+Foc/pa:%>kin%>pä  # ;

%+Foc/ko:%>kö  # ;

%+Foc/ko%+Foc/han:%>kö%>hän  # ;

%+Foc/ko%+Foc/kaan:%>kö%>kään  # ;

%+Foc/ko%+Foc/kin:%>kö%>kin  # ;

%+Foc/ko%+Foc/pa:%>kö%>pä  # ;

%+Foc/ko%+Foc/s:%>kö%>s  # ;

%+Foc/pa:%>pä  # ;

%+Foc/pa%+Foc/han:%>pä%>hän  # ;

%+Foc/pa%+Foc/kaan:%>pä%>kään  # ;

%+Foc/pa%+Foc/kin:%>pä%>kin  # ;

%+Foc/pa%+Foc/ko:%>pä%>kö  # ;

%+Foc/pa%+Foc/s:%>pä%>s  # ;


LEXICON PCLE_FRONT_CLIT_KA_S

%+Foc/ka:%>kä  # ;

%+Foc/ka%+Foc/han:%>kä%>hän  # ;

%+Foc/ka%+Foc/pa:%>kä%>pä  # ;

%+Foc/ka%+Foc/pa%+Foc/han:%>kä%>pä%>hän  # ;

%+Foc/ka%+Foc/pa%+Foc/s:%>kä%>pä%>s  # ;

%+Foc/ka%+Foc/s:%>kä%>s  # ;

%+Foc/s:%>s  # ;


LEXICON PCLE_FRONT_CLIT_OPT

:  # ;
:  PCLE_FRONT_CLIT ;


LEXICON PCLE_FRONT_POSS

%+Px3:%>nsä  PCLE_FRONT_CLIT_OPT ;

%+PxPl1:%>mme  PCLE_FRONT_CLIT_OPT ;

%+PxPl2:%>nne  PCLE_FRONT_CLIT_OPT ;

%+PxSg1:%>ni  PCLE_FRONT_CLIT_OPT ;

%+PxSg2:%>si  PCLE_FRONT_CLIT_OPT ;


LEXICON PCLE_FRONT_POSS_EN

%+Px3:%>en  PCLE_FRONT_CLIT_OPT ;


LEXICON PCLE_FRONT_POSS_EN_OBL

:  PCLE_FRONT_POSS ;
:  PCLE_FRONT_POSS_EN ;


LEXICON PCLE_FRONT_POSS_EN_OPT

:  PCLE_FRONT_POSS ;
:  PCLE_FRONT_POSS_EN ;
:  PCLE_FRONT_CLIT ;
:  # ;


LEXICON PCLE_FRONT_POSS_OPT

:  PCLE_FRONT_POSS ;
:  PCLE_FRONT_CLIT ;
:  # ;


LEXICON PCLE_FRONT_POSS_ÄN

%+Px3:%>än  PCLE_FRONT_CLIT_OPT ;


LEXICON PCLE_FRONT_POSS_ÄN_OBL

:  PCLE_FRONT_POSS ;
:  PCLE_FRONT_POSS_ÄN ;


LEXICON PCLE_FRONT_POSS_ÄN_OPT

:  PCLE_FRONT_POSS ;
:  PCLE_FRONT_POSS_ÄN ;
:  PCLE_FRONT_CLIT ;
:  # ;

LEXICON INTJ_HAH

:	INTJ_COMPOUND_INTJ ;

:	# ;


LEXICON INTJ_OO

:	# ;

LEXICON INTJ_COMPOUND_INTJ

#:-	INTERJECTION ;

#:	INTERJECTION ;




